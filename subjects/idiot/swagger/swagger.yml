openapi: 3.0.0
info:
  title: Javascript Project
  description: Api for Javascript Project
  version: 1.0.0
servers:
  - url: http://localhost:10200/api
    description: The api in the docker compose
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    idiot_read:
      type: object
      required:
        - uuid
        - foo
        - too
        - roo
      properties:
        uuid:
          type: string
          format: uuid
        foo:
          type: string
          example: alpha
        too:
          type: integer
          example: 6
        roo:
          type: string
          enum:
            - yes
            - no
          example: yes
    idiot_cu:
      type: object
      required:
        - foo
        - too
        - roo
      properties:
        foo:
          type: string
          example: alpha
        too:
          type: integer
          example: 6
        roo:
          type: string
          enum:
            - yes
            - no
          example: yes
paths:
  /login:
    post:
      tags:
        - auth
      responses:
        "200":
          description: Login success
  /idiot:
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: '"List all idiot'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/idiot_read"
        "401":
          description: Unauthorized
    post:
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/idiot_cu"
      responses:
        "201":
          description: idiot created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/idiot_read"
        "401":
          description: Unauthorized
        "422":
          description: idiot payload is invalid
  "/idiot/{uuid}":
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
            example: ad1afbd2-77d2-404e-bbca-3f352f7f09a2
          required: true
          description: The idiot id
      responses:
        "200":
          description: idiot founded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/idiot_read"
        "401":
          description: Unauthorized
        "404":
          description: idiot not found
    put:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
            example: ad1afbd2-77d2-404e-bbca-3f352f7f09a2
          required: true
          description: The idiot id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/idiot_cu"
      responses:
        "200":
          description: idiot modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/idiot_read"
        "401":
          description: Unauthorized
        "404":
          description: idiot not found
        "422":
          description: idiot payload is invalid
    delete:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
            example: ad1afbd2-77d2-404e-bbca-3f352f7f09a2
          required: true
          description: The idiot id
      responses:
        "204":
          description: idiot deleted
        "401":
          description: Unauthorized
        "404":
          description: idiot not found
